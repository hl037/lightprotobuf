# Generated from java-escape by ANTLR 4.5
from antlr4 import *
from io import StringIO


def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2:")
        buf.write("\u01d0\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\3\2\3")
        buf.write("\2\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3\4\3\4\3\4")
        buf.write("\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\7\3\7\3")
        buf.write("\7\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\t")
        buf.write("\3\t\3\t\3\t\3\t\3\n\3\n\3\13\3\13\3\f\3\f\3\f\3\f\3\f")
        buf.write("\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\16\3\16\3\17\3\17\3\20")
        buf.write("\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\22\3\22")
        buf.write("\3\22\3\22\3\22\3\22\3\23\3\23\3\24\3\24\3\25\3\25\3\26")
        buf.write("\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\27")
        buf.write("\3\27\3\27\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\31")
        buf.write("\3\31\3\31\3\31\3\31\3\32\3\32\3\32\3\32\3\32\3\32\3\32")
        buf.write("\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33")
        buf.write("\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\35\3\35\3\35\3\35")
        buf.write("\3\35\3\35\3\36\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3\37")
        buf.write("\3\37\3\37\3\37\3 \3 \3 \3 \3 \3 \3 \3!\3!\3!\3!\3!\3")
        buf.write("!\3!\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3#\3#\3#\3#\3#\3#\3#")
        buf.write("\3$\3$\3$\3$\3$\3$\3$\3$\3%\3%\3%\3%\3%\3%\3%\3%\3&\3")
        buf.write("&\3&\3&\3&\3&\3&\3&\3&\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'")
        buf.write("\3\'\3(\3(\3(\3(\3(\3)\3)\3)\3)\3)\3)\3)\3*\3*\3*\3*\3")
        buf.write("*\3*\3+\3+\3,\3,\7,\u0166\n,\f,\16,\u0169\13,\3-\3-\7")
        buf.write("-\u016d\n-\f-\16-\u0170\13-\3.\3.\3.\5.\u0175\n.\3/\6")
        buf.write("/\u0178\n/\r/\16/\u0179\3\60\3\60\3\60\6\60\u017f\n\60")
        buf.write("\r\60\16\60\u0180\3\61\3\61\6\61\u0185\n\61\r\61\16\61")
        buf.write("\u0186\3\62\6\62\u018a\n\62\r\62\16\62\u018b\3\62\3\62")
        buf.write("\6\62\u0190\n\62\r\62\16\62\u0191\5\62\u0194\n\62\3\62")
        buf.write("\3\62\5\62\u0198\n\62\3\62\6\62\u019b\n\62\r\62\16\62")
        buf.write("\u019c\5\62\u019f\n\62\3\63\3\63\3\63\3\63\3\63\3\63\3")
        buf.write("\63\3\63\3\63\5\63\u01aa\n\63\3\64\3\64\3\64\3\64\3\64")
        buf.write("\7\64\u01b1\n\64\f\64\16\64\u01b4\13\64\3\64\3\64\3\65")
        buf.write("\3\65\3\66\3\66\3\66\3\66\5\66\u01be\n\66\3\67\3\67\5")
        buf.write("\67\u01c2\n\67\3\67\3\67\3\67\38\38\38\39\69\u01cb\n9")
        buf.write("\r9\169\u01cc\39\39\2\2:\3\3\5\4\7\5\t\6\13\7\r\b\17\t")
        buf.write("\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23")
        buf.write("%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36")
        buf.write(";\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63")
        buf.write("e\64g\65i\66k\67m8o9q:\3\2\17\5\2C\\aac|\6\2\62;C\\aa")
        buf.write("c|\3\2C\\\3\2\62;\4\2ZZzz\5\2\62;CHch\3\2\629\4\2GGgg")
        buf.write("\5\2--//^^\6\2\f\f\62\62^^``\4\2$$))\f\2$$))AA^^cdhhp")
        buf.write("pttvvxx\5\2\13\f\17\17\"\"\u01e4\2\3\3\2\2\2\2\5\3\2\2")
        buf.write("\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2")
        buf.write("\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27")
        buf.write("\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3")
        buf.write("\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2")
        buf.write(")\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2")
        buf.write("\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2")
        buf.write(";\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2")
        buf.write("\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2")
        buf.write("\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2")
        buf.write("\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3")
        buf.write("\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k")
        buf.write("\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\3s\3\2\2\2\5")
        buf.write("u\3\2\2\2\7|\3\2\2\2\t\u0084\3\2\2\2\13\u008b\3\2\2\2")
        buf.write("\r\u008d\3\2\2\2\17\u0095\3\2\2\2\21\u009c\3\2\2\2\23")
        buf.write("\u00a1\3\2\2\2\25\u00a3\3\2\2\2\27\u00a5\3\2\2\2\31\u00ad")
        buf.write("\3\2\2\2\33\u00b1\3\2\2\2\35\u00b3\3\2\2\2\37\u00b5\3")
        buf.write("\2\2\2!\u00bd\3\2\2\2#\u00bf\3\2\2\2%\u00c5\3\2\2\2\'")
        buf.write("\u00c7\3\2\2\2)\u00c9\3\2\2\2+\u00cb\3\2\2\2-\u00d6\3")
        buf.write("\2\2\2/\u00d9\3\2\2\2\61\u00dd\3\2\2\2\63\u00e6\3\2\2")
        buf.write("\2\65\u00ef\3\2\2\2\67\u00f8\3\2\2\29\u00ff\3\2\2\2;\u0105")
        buf.write("\3\2\2\2=\u010b\3\2\2\2?\u0111\3\2\2\2A\u0118\3\2\2\2")
        buf.write("C\u011f\3\2\2\2E\u0126\3\2\2\2G\u012d\3\2\2\2I\u0135\3")
        buf.write("\2\2\2K\u013d\3\2\2\2M\u0146\3\2\2\2O\u014f\3\2\2\2Q\u0154")
        buf.write("\3\2\2\2S\u015b\3\2\2\2U\u0161\3\2\2\2W\u0163\3\2\2\2")
        buf.write("Y\u016a\3\2\2\2[\u0174\3\2\2\2]\u0177\3\2\2\2_\u017b\3")
        buf.write("\2\2\2a\u0182\3\2\2\2c\u0189\3\2\2\2e\u01a9\3\2\2\2g\u01ab")
        buf.write("\3\2\2\2i\u01b7\3\2\2\2k\u01b9\3\2\2\2m\u01c1\3\2\2\2")
        buf.write("o\u01c6\3\2\2\2q\u01ca\3\2\2\2st\7=\2\2t\4\3\2\2\2uv\7")
        buf.write("k\2\2vw\7o\2\2wx\7r\2\2xy\7q\2\2yz\7t\2\2z{\7v\2\2{\6")
        buf.write("\3\2\2\2|}\7r\2\2}~\7c\2\2~\177\7e\2\2\177\u0080\7m\2")
        buf.write("\2\u0080\u0081\7c\2\2\u0081\u0082\7i\2\2\u0082\u0083\7")
        buf.write("g\2\2\u0083\b\3\2\2\2\u0084\u0085\7q\2\2\u0085\u0086\7")
        buf.write("r\2\2\u0086\u0087\7v\2\2\u0087\u0088\7k\2\2\u0088\u0089")
        buf.write("\7q\2\2\u0089\u008a\7p\2\2\u008a\n\3\2\2\2\u008b\u008c")
        buf.write("\7?\2\2\u008c\f\3\2\2\2\u008d\u008e\7o\2\2\u008e\u008f")
        buf.write("\7g\2\2\u008f\u0090\7u\2\2\u0090\u0091\7u\2\2\u0091\u0092")
        buf.write("\7c\2\2\u0092\u0093\7i\2\2\u0093\u0094\7g\2\2\u0094\16")
        buf.write("\3\2\2\2\u0095\u0096\7g\2\2\u0096\u0097\7z\2\2\u0097\u0098")
        buf.write("\7v\2\2\u0098\u0099\7g\2\2\u0099\u009a\7p\2\2\u009a\u009b")
        buf.write("\7f\2\2\u009b\20\3\2\2\2\u009c\u009d\7g\2\2\u009d\u009e")
        buf.write("\7p\2\2\u009e\u009f\7w\2\2\u009f\u00a0\7o\2\2\u00a0\22")
        buf.write("\3\2\2\2\u00a1\u00a2\7}\2\2\u00a2\24\3\2\2\2\u00a3\u00a4")
        buf.write("\7\177\2\2\u00a4\26\3\2\2\2\u00a5\u00a6\7u\2\2\u00a6\u00a7")
        buf.write("\7g\2\2\u00a7\u00a8\7t\2\2\u00a8\u00a9\7x\2\2\u00a9\u00aa")
        buf.write("\7k\2\2\u00aa\u00ab\7e\2\2\u00ab\u00ac\7g\2\2\u00ac\30")
        buf.write("\3\2\2\2\u00ad\u00ae\7t\2\2\u00ae\u00af\7r\2\2\u00af\u00b0")
        buf.write("\7e\2\2\u00b0\32\3\2\2\2\u00b1\u00b2\7*\2\2\u00b2\34\3")
        buf.write("\2\2\2\u00b3\u00b4\7+\2\2\u00b4\36\3\2\2\2\u00b5\u00b6")
        buf.write("\7t\2\2\u00b6\u00b7\7g\2\2\u00b7\u00b8\7v\2\2\u00b8\u00b9")
        buf.write("\7w\2\2\u00b9\u00ba\7t\2\2\u00ba\u00bb\7p\2\2\u00bb\u00bc")
        buf.write("\7u\2\2\u00bc \3\2\2\2\u00bd\u00be\7<\2\2\u00be\"\3\2")
        buf.write("\2\2\u00bf\u00c0\7i\2\2\u00c0\u00c1\7t\2\2\u00c1\u00c2")
        buf.write("\7q\2\2\u00c2\u00c3\7w\2\2\u00c3\u00c4\7r\2\2\u00c4$\3")
        buf.write("\2\2\2\u00c5\u00c6\7]\2\2\u00c6&\3\2\2\2\u00c7\u00c8\7")
        buf.write(".\2\2\u00c8(\3\2\2\2\u00c9\u00ca\7_\2\2\u00ca*\3\2\2\2")
        buf.write("\u00cb\u00cc\7g\2\2\u00cc\u00cd\7z\2\2\u00cd\u00ce\7v")
        buf.write("\2\2\u00ce\u00cf\7g\2\2\u00cf\u00d0\7p\2\2\u00d0\u00d1")
        buf.write("\7u\2\2\u00d1\u00d2\7k\2\2\u00d2\u00d3\7q\2\2\u00d3\u00d4")
        buf.write("\7p\2\2\u00d4\u00d5\7u\2\2\u00d5,\3\2\2\2\u00d6\u00d7")
        buf.write("\7v\2\2\u00d7\u00d8\7q\2\2\u00d8.\3\2\2\2\u00d9\u00da")
        buf.write("\7o\2\2\u00da\u00db\7c\2\2\u00db\u00dc\7z\2\2\u00dc\60")
        buf.write("\3\2\2\2\u00dd\u00de\7t\2\2\u00de\u00df\7g\2\2\u00df\u00e0")
        buf.write("\7s\2\2\u00e0\u00e1\7w\2\2\u00e1\u00e2\7k\2\2\u00e2\u00e3")
        buf.write("\7t\2\2\u00e3\u00e4\7g\2\2\u00e4\u00e5\7f\2\2\u00e5\62")
        buf.write("\3\2\2\2\u00e6\u00e7\7q\2\2\u00e7\u00e8\7r\2\2\u00e8\u00e9")
        buf.write("\7v\2\2\u00e9\u00ea\7k\2\2\u00ea\u00eb\7q\2\2\u00eb\u00ec")
        buf.write("\7p\2\2\u00ec\u00ed\7c\2\2\u00ed\u00ee\7n\2\2\u00ee\64")
        buf.write("\3\2\2\2\u00ef\u00f0\7t\2\2\u00f0\u00f1\7g\2\2\u00f1\u00f2")
        buf.write("\7r\2\2\u00f2\u00f3\7g\2\2\u00f3\u00f4\7c\2\2\u00f4\u00f5")
        buf.write("\7v\2\2\u00f5\u00f6\7g\2\2\u00f6\u00f7\7f\2\2\u00f7\66")
        buf.write("\3\2\2\2\u00f8\u00f9\7f\2\2\u00f9\u00fa\7q\2\2\u00fa\u00fb")
        buf.write("\7w\2\2\u00fb\u00fc\7d\2\2\u00fc\u00fd\7n\2\2\u00fd\u00fe")
        buf.write("\7g\2\2\u00fe8\3\2\2\2\u00ff\u0100\7h\2\2\u0100\u0101")
        buf.write("\7n\2\2\u0101\u0102\7q\2\2\u0102\u0103\7c\2\2\u0103\u0104")
        buf.write("\7v\2\2\u0104:\3\2\2\2\u0105\u0106\7k\2\2\u0106\u0107")
        buf.write("\7p\2\2\u0107\u0108\7v\2\2\u0108\u0109\7\65\2\2\u0109")
        buf.write("\u010a\7\64\2\2\u010a<\3\2\2\2\u010b\u010c\7k\2\2\u010c")
        buf.write("\u010d\7p\2\2\u010d\u010e\7v\2\2\u010e\u010f\78\2\2\u010f")
        buf.write("\u0110\7\66\2\2\u0110>\3\2\2\2\u0111\u0112\7w\2\2\u0112")
        buf.write("\u0113\7k\2\2\u0113\u0114\7p\2\2\u0114\u0115\7v\2\2\u0115")
        buf.write("\u0116\7\65\2\2\u0116\u0117\7\64\2\2\u0117@\3\2\2\2\u0118")
        buf.write("\u0119\7w\2\2\u0119\u011a\7k\2\2\u011a\u011b\7p\2\2\u011b")
        buf.write("\u011c\7v\2\2\u011c\u011d\78\2\2\u011d\u011e\7\66\2\2")
        buf.write("\u011eB\3\2\2\2\u011f\u0120\7u\2\2\u0120\u0121\7k\2\2")
        buf.write("\u0121\u0122\7p\2\2\u0122\u0123\7v\2\2\u0123\u0124\7\65")
        buf.write("\2\2\u0124\u0125\7\64\2\2\u0125D\3\2\2\2\u0126\u0127\7")
        buf.write("u\2\2\u0127\u0128\7k\2\2\u0128\u0129\7p\2\2\u0129\u012a")
        buf.write("\7v\2\2\u012a\u012b\78\2\2\u012b\u012c\7\66\2\2\u012c")
        buf.write("F\3\2\2\2\u012d\u012e\7h\2\2\u012e\u012f\7k\2\2\u012f")
        buf.write("\u0130\7z\2\2\u0130\u0131\7g\2\2\u0131\u0132\7f\2\2\u0132")
        buf.write("\u0133\7\65\2\2\u0133\u0134\7\64\2\2\u0134H\3\2\2\2\u0135")
        buf.write("\u0136\7h\2\2\u0136\u0137\7k\2\2\u0137\u0138\7z\2\2\u0138")
        buf.write("\u0139\7g\2\2\u0139\u013a\7f\2\2\u013a\u013b\78\2\2\u013b")
        buf.write("\u013c\7\66\2\2\u013cJ\3\2\2\2\u013d\u013e\7u\2\2\u013e")
        buf.write("\u013f\7h\2\2\u013f\u0140\7k\2\2\u0140\u0141\7z\2\2\u0141")
        buf.write("\u0142\7g\2\2\u0142\u0143\7f\2\2\u0143\u0144\7\65\2\2")
        buf.write("\u0144\u0145\7\64\2\2\u0145L\3\2\2\2\u0146\u0147\7u\2")
        buf.write("\2\u0147\u0148\7h\2\2\u0148\u0149\7k\2\2\u0149\u014a\7")
        buf.write("z\2\2\u014a\u014b\7g\2\2\u014b\u014c\7f\2\2\u014c\u014d")
        buf.write("\78\2\2\u014d\u014e\7\66\2\2\u014eN\3\2\2\2\u014f\u0150")
        buf.write("\7d\2\2\u0150\u0151\7q\2\2\u0151\u0152\7q\2\2\u0152\u0153")
        buf.write("\7n\2\2\u0153P\3\2\2\2\u0154\u0155\7u\2\2\u0155\u0156")
        buf.write("\7v\2\2\u0156\u0157\7t\2\2\u0157\u0158\7k\2\2\u0158\u0159")
        buf.write("\7p\2\2\u0159\u015a\7i\2\2\u015aR\3\2\2\2\u015b\u015c")
        buf.write("\7d\2\2\u015c\u015d\7{\2\2\u015d\u015e\7v\2\2\u015e\u015f")
        buf.write("\7g\2\2\u015f\u0160\7u\2\2\u0160T\3\2\2\2\u0161\u0162")
        buf.write("\7\60\2\2\u0162V\3\2\2\2\u0163\u0167\t\2\2\2\u0164\u0166")
        buf.write("\t\3\2\2\u0165\u0164\3\2\2\2\u0166\u0169\3\2\2\2\u0167")
        buf.write("\u0165\3\2\2\2\u0167\u0168\3\2\2\2\u0168X\3\2\2\2\u0169")
        buf.write("\u0167\3\2\2\2\u016a\u016e\t\4\2\2\u016b\u016d\t\3\2\2")
        buf.write("\u016c\u016b\3\2\2\2\u016d\u0170\3\2\2\2\u016e\u016c\3")
        buf.write("\2\2\2\u016e\u016f\3\2\2\2\u016fZ\3\2\2\2\u0170\u016e")
        buf.write("\3\2\2\2\u0171\u0175\5]/\2\u0172\u0175\5_\60\2\u0173\u0175")
        buf.write("\5a\61\2\u0174\u0171\3\2\2\2\u0174\u0172\3\2\2\2\u0174")
        buf.write("\u0173\3\2\2\2\u0175\\\3\2\2\2\u0176\u0178\t\5\2\2\u0177")
        buf.write("\u0176\3\2\2\2\u0178\u0179\3\2\2\2\u0179\u0177\3\2\2\2")
        buf.write("\u0179\u017a\3\2\2\2\u017a^\3\2\2\2\u017b\u017c\7\62\2")
        buf.write("\2\u017c\u017e\t\6\2\2\u017d\u017f\t\7\2\2\u017e\u017d")
        buf.write("\3\2\2\2\u017f\u0180\3\2\2\2\u0180\u017e\3\2\2\2\u0180")
        buf.write("\u0181\3\2\2\2\u0181`\3\2\2\2\u0182\u0184\7\62\2\2\u0183")
        buf.write("\u0185\t\b\2\2\u0184\u0183\3\2\2\2\u0185\u0186\3\2\2\2")
        buf.write("\u0186\u0184\3\2\2\2\u0186\u0187\3\2\2\2\u0187b\3\2\2")
        buf.write("\2\u0188\u018a\t\5\2\2\u0189\u0188\3\2\2\2\u018a\u018b")
        buf.write("\3\2\2\2\u018b\u0189\3\2\2\2\u018b\u018c\3\2\2\2\u018c")
        buf.write("\u0193\3\2\2\2\u018d\u018f\7\60\2\2\u018e\u0190\t\5\2")
        buf.write("\2\u018f\u018e\3\2\2\2\u0190\u0191\3\2\2\2\u0191\u018f")
        buf.write("\3\2\2\2\u0191\u0192\3\2\2\2\u0192\u0194\3\2\2\2\u0193")
        buf.write("\u018d\3\2\2\2\u0193\u0194\3\2\2\2\u0194\u019e\3\2\2\2")
        buf.write("\u0195\u0197\t\t\2\2\u0196\u0198\t\n\2\2\u0197\u0196\3")
        buf.write("\2\2\2\u0197\u0198\3\2\2\2\u0198\u019a\3\2\2\2\u0199\u019b")
        buf.write("\t\5\2\2\u019a\u0199\3\2\2\2\u019b\u019c\3\2\2\2\u019c")
        buf.write("\u019a\3\2\2\2\u019c\u019d\3\2\2\2\u019d\u019f\3\2\2\2")
        buf.write("\u019e\u0195\3\2\2\2\u019e\u019f\3\2\2\2\u019fd\3\2\2")
        buf.write("\2\u01a0\u01a1\7v\2\2\u01a1\u01a2\7t\2\2\u01a2\u01a3\7")
        buf.write("w\2\2\u01a3\u01aa\7g\2\2\u01a4\u01a5\7h\2\2\u01a5\u01a6")
        buf.write("\7c\2\2\u01a6\u01a7\7n\2\2\u01a7\u01a8\7u\2\2\u01a8\u01aa")
        buf.write("\7g\2\2\u01a9\u01a0\3\2\2\2\u01a9\u01a4\3\2\2\2\u01aa")
        buf.write("f\3\2\2\2\u01ab\u01b2\5i\65\2\u01ac\u01b1\5k\66\2\u01ad")
        buf.write("\u01b1\5m\67\2\u01ae\u01b1\5o8\2\u01af\u01b1\t\13\2\2")
        buf.write("\u01b0\u01ac\3\2\2\2\u01b0\u01ad\3\2\2\2\u01b0\u01ae\3")
        buf.write("\2\2\2\u01b0\u01af\3\2\2\2\u01b1\u01b4\3\2\2\2\u01b2\u01b0")
        buf.write("\3\2\2\2\u01b2\u01b3\3\2\2\2\u01b3\u01b5\3\2\2\2\u01b4")
        buf.write("\u01b2\3\2\2\2\u01b5\u01b6\5i\65\2\u01b6h\3\2\2\2\u01b7")
        buf.write("\u01b8\t\f\2\2\u01b8j\3\2\2\2\u01b9\u01ba\7^\2\2\u01ba")
        buf.write("\u01bb\t\6\2\2\u01bb\u01bd\t\7\2\2\u01bc\u01be\t\7\2\2")
        buf.write("\u01bd\u01bc\3\2\2\2\u01bd\u01be\3\2\2\2\u01bel\3\2\2")
        buf.write("\2\u01bf\u01c0\7^\2\2\u01c0\u01c2\7\62\2\2\u01c1\u01bf")
        buf.write("\3\2\2\2\u01c1\u01c2\3\2\2\2\u01c2\u01c3\3\2\2\2\u01c3")
        buf.write("\u01c4\t\b\2\2\u01c4\u01c5\b\67\2\2\u01c5n\3\2\2\2\u01c6")
        buf.write("\u01c7\7^\2\2\u01c7\u01c8\t\r\2\2\u01c8p\3\2\2\2\u01c9")
        buf.write("\u01cb\t\16\2\2\u01ca\u01c9\3\2\2\2\u01cb\u01cc\3\2\2")
        buf.write("\2\u01cc\u01ca\3\2\2\2\u01cc\u01cd\3\2\2\2\u01cd\u01ce")
        buf.write("\3\2\2\2\u01ce\u01cf\b9\3\2\u01cfr\3\2\2\2\25\2\u0167")
        buf.write("\u016e\u0174\u0179\u0180\u0186\u018b\u0191\u0193\u0197")
        buf.write("\u019c\u019e\u01a9\u01b0\u01b2\u01bd\u01c1\u01cc\4\3\67")
        buf.write("\2\b\2\2")
        return buf.getvalue()


class protobufLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]


    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    T__40 = 41
    T__41 = 42
    IDENT = 43
    CAMEL_IDENT = 44
    INT_LIT = 45
    DEC_INT = 46
    HEX_INT = 47
    OCT_INT = 48
    FLOAT_LIT = 49
    BOOL_LIT = 50
    STR_LIT = 51
    QUOTE = 52
    HEX_ESCAPE = 53
    OCT_ESCAPE = 54
    CHAR_ESCAPE = 55
    WS = 56

    modeNames = [ u"DEFAULT_MODE" ]

    literalNames = [ u"<INVALID>",
            "';'", "'import'", "'package'", "'option'", "'='", "'message'", 
            "'extend'", "'enum'", "'{'", "'}'", "'service'", "'rpc'", "'('", 
            "')'", "'returns'", "':'", "'group'", "'['", "','", "']'", "'extensions'", 
            "'to'", "'max'", "'required'", "'optional'", "'repeated'", "'double'", 
            "'float'", "'int32'", "'int64'", "'uint32'", "'uint64'", "'sint32'", 
            "'sint64'", "'fixed32'", "'fixed64'", "'sfixed32'", "'sfixed64'", 
            "'bool'", "'string'", "'bytes'", "'.'" ]

    symbolicNames = [ u"<INVALID>",
            "IDENT", "CAMEL_IDENT", "INT_LIT", "DEC_INT", "HEX_INT", "OCT_INT", 
            "FLOAT_LIT", "BOOL_LIT", "STR_LIT", "QUOTE", "HEX_ESCAPE", "OCT_ESCAPE", 
            "CHAR_ESCAPE", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "T__39", "T__40", "T__41", "IDENT", "CAMEL_IDENT", 
                  "INT_LIT", "DEC_INT", "HEX_INT", "OCT_INT", "FLOAT_LIT", 
                  "BOOL_LIT", "STR_LIT", "QUOTE", "HEX_ESCAPE", "OCT_ESCAPE", 
                  "CHAR_ESCAPE", "WS" ]

    grammarFileName = "protobuf.g4"

    def __init__(self, input=None):
        super().__init__(input)
        self.checkVersion("4.5")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


    def action(self, localctx:RuleContext, ruleIndex:int, actionIndex:int):
    	if self._actions is None:
    		actions = dict()
    		actions[53] = self.OCT_ESCAPE_action 
    		self._actions = actions
    	action = self._actions.get(ruleIndex, None)
    	if action is not None:
    		action(localctx, actionIndex)
    	else:
    		raise Exception("No registered action for:" + str(ruleIndex))

    def OCT_ESCAPE_action(self, localctx:RuleContext , actionIndex:int):
        if actionIndex == 0:
            1,3
     


